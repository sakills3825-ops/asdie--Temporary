/**
 * 앱 전역 제한값 및 설정 상수
 *
 * UI/기능 제한, 타임아웃, 크기 제한 등 정의.
 * 각 값은 실험 결과, 메모리 측정, 사용자 경험 기반으로 결정됨.
 */

export const LIMITS = {
  // ===== 탭 관리 =====
  /**
   * 최대 탭 개수: 100개
   * 
   * 근거:
   * - 4GB 시스템: 탭당 평균 40MB × 100 = 4GB (메모리 한계)
   * - 8GB 시스템: 여유 있으나 UI 성능 저하 (탭 바 렌더링)
   * - 사용자 경험: 100개 이상 시 탭 관리 어려움
   * - 테스트 결과: 100개까지 안정, 150개부터 크래시 빈번
   * 
   * @see system/constants.ts calculateMaxTabs() - 동적 계산
   */
  MAX_TABS: 100,

  /**
   * 최소 탭 개수: 1개
   * 
   * 근거:
   * - 브라우저는 최소 1개 탭 필요 (빈 창 방지)
   * - 마지막 탭 닫기 시 새 탭 자동 생성
   */
  MIN_TABS: 1,

  // ===== 히스토리 =====
  /**
   * 최대 히스토리 항목: 10,000개
   * 
   * 근거:
   * - 메모리: 항목당 ~200 bytes × 10,000 = 2MB (허용 가능)
   * - 검색 성능: 10,000개까지 인덱스 검색 < 100ms
   * - 스토리지: SQLite 성능 측정 결과 10만개까지 안정
   * - 사용자 경험: 3개월 히스토리 = 약 5,000~10,000개
   * 
   * 참고: 90일 이전 항목은 자동 삭제 (HISTORY_RETENTION_DAYS)
   */
  MAX_HISTORY_ITEMS: 10000,

  /**
   * 히스토리 보관 기간: 90일
   * 
   * 근거:
   * - 개인정보 보호: 3개월 이상 오래된 기록 불필요
   * - GDPR 권장사항: 3개월 주기 데이터 정리
   * - 스토리지 효율: 90일 이상 데이터는 디스크 낭비
   */
  HISTORY_RETENTION_DAYS: 90,

  // ===== 북마크 =====
  /**
   * 최대 북마크 개수: 5,000개
   * 
   * 근거:
   * - 메모리: 북마크당 ~500 bytes × 5,000 = 2.5MB
   * - 렌더링: 트리 구조 렌더링 성능 측정 결과
   * - 실무 사용: 대부분 사용자 < 1,000개
   * - 극단 사용자: 5,000개 이상 시 관리 어려움
   */
  MAX_BOOKMARKS: 5000,

  /**
   * 북마크 이름 최대 길이: 255자
   * 
   * 근거:
   * - 파일 시스템 제한: 대부분 OS에서 파일명 255자 제한
   * - UI 렌더링: 255자까지 말줄임 처리 가능
   * - UTF-8 인코딩: 255자 × 4 bytes = 1KB (허용 가능)
   */
  MAX_BOOKMARK_NAME_LENGTH: 255,

  // ===== 파일 =====
  /**
   * 최대 파일 크기: 500MB
   * 
   * 근거:
   * - 메모리 안전: 파일 전체 로드 시 500MB까지 허용 가능
   * - 네트워크: 다운로드 시간 고려 (10Mbps → 약 7분)
   * - Electron 제한: V8 힙 크기 제한 고려
   * - 실무 사용: 대부분 파일 < 100MB
   * 
   * 참고: 스트리밍 방식으로 더 큰 파일 처리 가능
   */
  MAX_FILE_SIZE: 500 * 1024 * 1024, // 500MB

  /**
   * 파일 이름 최대 길이: 255자
   * 
   * 근거:
   * - Windows: 260자 경로 제한 (MAX_PATH)
   * - macOS/Linux: 255자 파일명 제한
   * - 크로스 플랫폼 호환성
   */
  MAX_FILE_NAME_LENGTH: 255,

  // ===== URL =====
  /**
   * 최대 URL 길이: 2,048자
   * 
   * 근거:
   * - Internet Explorer 제한: 2,083자
   * - Chrome 권장: 2,048자 (실제로는 더 길지만)
   * - 서버 제한: 대부분 웹서버 2KB 헤더 제한
   * - 실무 사용: 대부분 URL < 500자
   */
  MAX_URL_LENGTH: 2048,

  // ===== 성능 =====
  /**
   * IPC 타임아웃: 30초
   * 
   * 근거:
   * - 일반 작업: < 1초
   * - 파일 I/O: 1~5초
   * - 데이터베이스 쿼리: 1~10초
   * - 네트워크 요청: 5~30초
   * - 안전 여유: 30초면 대부분 작업 완료
   * 
   * 예외: 대용량 파일 작업은 별도 타임아웃 설정
   */
  IPC_TIMEOUT_MS: 30000, // 30초

  /**
   * 네트워크 타임아웃: 60초
   * 
   * 근거:
   * - HTTP 표준: 30~60초 권장
   * - 느린 서버: 응답까지 30~60초
   * - 사용자 인내: 60초 이상 기다리기 어려움
   * - 재시도 전략: 60초 초과 시 재시도
   */
  NETWORK_TIMEOUT_MS: 60000, // 60초

  // ===== 줌 =====
  /**
   * 최소 줌 레벨: 0.5 (50%)
   * 
   * 근거:
   * - UI 가독성: 50% 이하는 텍스트 읽기 어려움
   * - 브라우저 표준: Chrome/Firefox 최소 25~50%
   * - 접근성: 저시력 사용자 고려
   */
  MIN_ZOOM: 0.5,

  /**
   * 최대 줌 레벨: 3.0 (300%)
   * 
   * 근거:
   * - UI 성능: 300% 이상 시 렌더링 성능 저하
   * - 브라우저 표준: Chrome/Firefox 최대 300~500%
   * - 실무 사용: 대부분 사용자 100~150%
   */
  MAX_ZOOM: 3,

  /**
   * 기본 줌 레벨: 1.0 (100%)
   */
  DEFAULT_ZOOM: 1,

  /**
   * 줌 단계: 0.1 (10%)
   * 
   * 근거:
   * - 사용자 경험: 10% 단위가 인지 가능한 최소 변화
   * - 키보드 단축키: Ctrl+/- 10% 단위 변경
   */
  ZOOM_STEP: 0.1,

  // ===== 로그 =====
  /**
   * 최대 로그 파일 크기: 10MB
   * 
   * 근거:
   * - 디스크 사용: 10MB × 5개 = 50MB (허용 가능)
   * - 로그 분석: 10MB까지 텍스트 에디터에서 열기 가능
   * - 디버깅: 10MB면 수천~수만 줄 로그
   * - 회전: 10MB 초과 시 새 파일 생성
   */
  MAX_LOG_FILE_SIZE: 10 * 1024 * 1024, // 10MB

  /**
   * 최대 로그 파일 개수: 5개
   * 
   * 근거:
   * - 총 용량: 10MB × 5 = 50MB (디스크 영향 최소)
   * - 디버깅: 최근 5개 파일이면 대부분 문제 추적 가능
   * - 회전 전략: 가장 오래된 파일부터 삭제
   */
  MAX_LOG_FILES: 5,
} as const;

/**
 * 디바운스 지연 시간 (밀리초)
 * 
 * 사용자 입력을 일정 시간 동안 대기 후 처리하여 성능 최적화.
 */
export const DEBOUNCE_MS = {
  /**
   * 입력 필드: 300ms
   * 
   * 근거:
   * - 타이핑 속도: 일반 사용자 200~300ms/글자
   * - UX 연구: 300ms면 즉각적으로 느껴짐
   * - 서버 부하: 검색 API 호출 최소화
   */
  INPUT: 300,

  /**
   * 윈도우 리사이즈: 200ms
   * 
   * 근거:
   * - 리사이즈 빈도: 사용자가 드래그하는 동안 연속 발생
   * - 렌더링 성능: 200ms 간격이면 부드러운 UX
   * - 레이아웃 재계산: 최소화
   */
  RESIZE: 200,

  /**
   * 스크롤: 150ms
   * 
   * 근거:
   * - 스크롤 빈도: 매우 빈번 (60fps)
   * - 무한 스크롤: 150ms면 다음 페이지 로드 적절
   * - 성능: 이미지 lazy loading 트리거
   */
  SCROLL: 150,

  /**
   * 네비게이션: 500ms
   * 
   * 근거:
   * - URL 입력: 사용자가 입력 완료 후 대기
   * - 자동완성: 500ms면 충분히 빠름
   * - 서버 부하: 과도한 자동완성 요청 방지
   */
  NAVIGATION: 500,
} as const;

/**
 * 캐시 유효 시간 (밀리초)
 * 
 * 메모리 캐시 데이터의 유효 기간.
 */
export const CACHE_DURATION_MS = {
  /**
   * 탭 메타데이터: 1분
   * 
   * 근거:
   * - 변경 빈도: 탭 정보는 자주 변경됨
   * - 메모리 효율: 1분이면 대부분 재사용 가능
   * - 일관성: 너무 길면 stale 데이터 위험
   */
  TAB_METADATA: 60000, // 1분

  /**
   * 설정: 5분
   * 
   * 근거:
   * - 변경 빈도: 설정은 거의 변경되지 않음
   * - 메모리 효율: 5분간 캐시해도 부담 없음
   * - 동기화: 다중 윈도우 간 5분 주기 동기화
   */
  SETTINGS: 5 * 60000, // 5분

  /**
   * 북마크 목록: 1분
   * 
   * 근거:
   * - 변경 빈도: 북마크는 가끔 추가/삭제됨
   * - UI 일관성: 1분이면 충분히 최신 유지
   * - 메모리: 목록 크기가 커서 짧은 캐시 권장
   */
  BOOKMARK_LIST: 60000, // 1분
} as const;
